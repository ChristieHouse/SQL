# For this project, I worked with a dataset called chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

# Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, CustomerID, Country
FROM chinook.customers
WHERE Country<>'USA';

# Show only the Customers from Brazil.
SELECT FirstName, LastName, CustomerID, Country
FROM chinook.customers
WHERE Country='Brazil';

# Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.InvoiceID, invoices.InvoiceDate, invoices.BillingCountry
FROM chinook.customers
LEFT JOIN chinook.invoices
ON customers.CustomerID=invoices.CustomerID
WHERE customers.Country='Brazil';

# Show the Employees who are Sales Agents.
SELECT FirstName, LastName, Title
FROM chinook.employees
WHERE Title='Sales Support Agent';

# Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices;

# Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.FirstName, employees.LastName, invoices.InvoiceId
FROM chinook.invoices
LEFT JOIN chinook.customers
ON invoices.CustomerId=customers.CustomerId
LEFT JOIN chinook.employees
ON customers.SupportRepId = employees.EmployeeId;

# Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.Total AS invoiceTotal, customers.FirstName AS custFirstName, customers.LastName AS custLastName, 
customers.Country, employees.FirstName AS employeeFirstName, employees.LastName AS employeeLastName
FROM chinook.invoices
LEFT JOIN chinook.customers
ON invoices.CustomerId=customers.CustomerId
LEFT JOIN chinook.employees
ON customers.SupportRepId = employees.EmployeeId;

# How many Invoices were there in 2009?
SELECT count(InvoiceId)
FROM chinook.invoices
WHERE InvoiceDate  >= '2009-01-01 00:00:00'
AND InvoiceDate < '2010-01-01 00:00:00';

# What are the total sales for 2009?
SELECT ROUND(SUM(Total), 2) AS TotalSales2009
FROM chinook.invoices
WHERE InvoiceDate  >= '2009-01-01 00:00:00'
AND InvoiceDate < '2010-01-01 00:00:00';

# Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, invoice_items.InvoiceLineId
FROM chinook.tracks
RIGHT JOIN chinook.invoice_items
ON tracks.TrackId=invoice_items.TrackId;

# Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name AS trackName, artists.Name AS artistName, invoice_items.InvoiceLineId
FROM chinook.tracks
RIGHT JOIN chinook.invoice_items
ON tracks.TrackId=invoice_items.TrackId
JOIN chinook.albums
ON tracks.AlbumId=albums.AlbumId
JOIN chinook.artists
ON albums.ArtistId=artists.ArtistId;

# Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS trackName, albums.Title AS albumName, media_types.Name AS mediaType, genres.Name AS genre
FROM chinook.tracks
JOIN chinook.albums
ON tracks.AlbumId=albums.AlbumId
JOIN chinook.media_types
ON tracks.MediaTypeId=media_types.MediaTypeId
JOIN chinook.genres
ON tracks.GenreId=genres.GenreId;

# Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total),2) AS totalSales
FROM chinook.employees
JOIN chinook.customers
ON employees.EmployeeId=customers.SupportRepId
JOIN chinook.invoices
ON customers.CustomerId=invoices.CustomerId
WHERE employees.Title='Sales Support Agent'
GROUP BY employees.EmployeeId;

# Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total),2) AS totalSales
FROM chinook.employees
JOIN chinook.customers
ON employees.EmployeeId=customers.SupportRepId
JOIN chinook.invoices
ON customers.CustomerId=invoices.CustomerId
WHERE employees.Title='Sales Support Agent'
AND InvoiceDate  >= '2009-01-01 00:00:00'
AND InvoiceDate < '2010-01-01 00:00:00'
GROUP BY employees.EmployeeId
ORDER BY totalSales desc
LIMIT 1;

# What tracks appear on the most playlists? Order tracks by the number of playlists they appear on. 
SELECT tracks.Name, COUNT(DISTINCT playlists.PlaylistId) as numberPlaylists
FROM chinook.playlists
JOIN chinook.playlist_track
ON playlists.PlaylistId=playlist_track.PlaylistId
JOIN chinook.tracks
ON playlist_track.TrackId=tracks.TrackId
GROUP BY tracks.Name
ORDER BY numberPlaylists desc;

# What tracks were sold more than once?
SELECT invoice_items.TrackId, tracks.Name, COUNT(invoice_items.TrackId) AS numberSold
FROM chinook.invoice_items
LEFT JOIN chinook.tracks
ON invoice_items.TrackId=tracks.TrackId
GROUP BY invoice_items.TrackId
HAVING numberSold>1;

# What music genre is most purchased? How many times have tracks of this genre been sold?
WITH tempTable AS(
    SELECT invoice_items.TrackId, tracks.Name, COUNT(invoice_items.TrackId) AS numberSold, genres.Name as genre
    FROM invoice_items
    LEFT JOIN tracks
    ON invoice_items.TrackId=tracks.TrackId
    JOIN genres
    ON tracks.GenreId=genres.GenreId
    GROUP BY invoice_items.TrackId
)
SELECT genre, SUM(numberSold) as numberTracksSold
FROM tempTable
GROUP BY genre
ORDER BY numberTracksSold desc
LIMIT 1;
